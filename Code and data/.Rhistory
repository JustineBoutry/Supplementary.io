y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")  # Déplacer la légende en haut du graphique
ggMarginal(a, type = "boxplot",
margins = "y",
size = 5,
groupColour = TRUE,
groupFill = TRUE)
# Créer le graphique avec ggplot
a <- ggplot(data = data_1N, aes(x = diff_maxR, y = buds_10, color = Tumors)) +
geom_point(size = 3, alpha = 0.7) +  # Ajuster la taille et la transparence des points
geom_smooth(method = "lm", se = FALSE) + # Ajuster la régression linéaire+
geom_hline(yintercept = median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = TRUE),
linetype = "solid", color = "darkgrey", size = 1) +
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 5, by = 1))
ggMarginal(a, type = "boxplot",
margins = "y",
size = 5,
groupColour = TRUE,
groupFill = TRUE)
# Créer le graphique avec ggplot
a <- ggplot(data = data_1N, aes(x = diff_maxR, y = buds_10, color = Tumors)) +
geom_point(size = 3, alpha = 0.7) +  # Ajuster la taille et la transparence des points
geom_smooth(method = "lm", se = FALSE) + # Ajuster la régression linéaire+
geom_hline(yintercept = median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = TRUE),
linetype = "solid", color = "darkgrey", size = 1) +
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 5, by = 2))
ggMarginal(a, type = "boxplot",
margins = "y",
size = 5,
groupColour = TRUE,
groupFill = TRUE)
# Créer le graphique avec ggplot
a <- ggplot(data = data_1N, aes(x = diff_maxR, y = buds_10, color = Tumors)) +
geom_point(size = 3, alpha = 0.7) +  # Ajuster la taille et la transparence des points
geom_smooth(method = "lm", se = T) + # Ajuster la régression linéaire+
geom_hline(yintercept = median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = TRUE),
linetype = "solid", color = "darkgrey", size = 1) +
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 5, by = 2))
ggMarginal(a, type = "boxplot",
margins = "y",
size = 5,
groupColour = TRUE,
groupFill = TRUE)
# Créer le graphique avec ggplot
a <- ggplot(data = data_1N, aes(x = diff_maxR, y = buds_10, color = Tumors)) +
geom_point(size = 3, alpha = 0.7, position = "jitter") +  # Ajuster la taille et la transparence des points
geom_smooth(method = "lm", se = T) + # Ajuster la régression linéaire+
geom_hline(yintercept = median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = TRUE),
linetype = "solid", color = "darkgrey", size = 1) +
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 5, by = 2))
ggMarginal(a, type = "boxplot",
margins = "y",
size = 5,
groupColour = TRUE,
groupFill = TRUE)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors == 0]
median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>4], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR<3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR<3])
15/94
boxplot_graph <- ggplot(data = data_1N, aes(x = factor(diff_maxR), y = buds_10)) +
geom_boxplot(fill = "skyblue", color = "black", width = 0.7) +  # Ajuster les couleurs et la largeur des boîtes
theme_minimal() +
labs(title = "Répartition des bourgeons en fonction du nombre de tentacules surnuméraires",
x = "Nombre de tentacules surnuméraires",
y = "Nombre de bourgeons produits (ten weeks)")
# Afficher le graphique
print(boxplot_graph)
median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR<3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR<3])
15/94
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR<3], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 0], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 0], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>3])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>5], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>5], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>5])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>4], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>4], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>4])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>6], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>6], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>6])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>7], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>7], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>7])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>8], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>7], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>5], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>5], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR>5])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR=3], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR=3], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3])
median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 0], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]), na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR== 0]), na.rm = T)
median(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR== 0], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3])
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3])
median(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR== 0], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==0 & data_1N$diff_maxR==0])
median(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR== 0], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==0])
median(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==1], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR== 1], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==1])
median(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==2], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR== 2], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==2])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR=4], na.rm = T)
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==4], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==4], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==4])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==5], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==5], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==5])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==4], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==4], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==4])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==6], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==6], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==6])
median(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==3])
median(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==2], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR== 2], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==2])
# Créer le graphique avec ggplot
a <- ggplot(data = data_1N, aes(x = diff_maxR, y = buds_10, color = Tumors)) +
geom_point(size = 3, alpha = 0.7, position = "jitter") +  # Ajuster la taille et la transparence des points
geom_smooth(method = "lm", se = T) + # Ajuster la régression linéaire+
geom_hline(yintercept = median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = TRUE),
linetype = "solid", color = "darkgrey", size = 1) +
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 5, by = 2))
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 5, by = 2))
# Créer le graphique avec ggplot
a <- ggplot(data = data_1N, aes(x = diff_maxR, y = buds_10, color = Tumors)) +
geom_point(size = 3, alpha = 0.7, position = "jitter") +  # Ajuster la taille et la transparence des points
geom_smooth(method = "lm", se = T) + # Ajuster la régression linéaire+
geom_hline(yintercept = median(data_1N$buds_10[data_1N$Tumors == 0], na.rm = TRUE),
linetype = "solid", color = "darkgrey", size = 1) +
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 5, by = 2))
ggMarginal(a, type = "boxplot",
margins = "y",
size = 5,
groupColour = TRUE,
groupFill = TRUE)
a <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10, color = Tumors)) +
geom_boxplot(size = 3, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10, color = Tumors)) +
geom_boxplot(size = 3, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors)) +
geom_boxplot(size = 3, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors)) +
geom_boxplot(size = 3, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors)) +
geom_boxplot(size = 3, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, color=Tumors)) +
geom_boxplot(size = 3, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, color=Tumors)) +
geom_boxplot(size = 1, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, color=Tumors)) +
geom_boxplot(size = 1, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, color=Tumors)) +
geom_boxplot(size = 0.8, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, fill=Tumors)) +
geom_boxplot(size = 0.8, alpha = 0.7) +
scale_color_manual(values = c("Chartreuse4", "darkred"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, fill=Tumors)) +
geom_boxplot(size = 0.8, alpha = 0.7) +
scale_fill_manual(values = c("Chartreuse4", "darkred"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, fill=Tumors)) +
geom_boxplot(size = 0.8, alpha = 0.7) +
scale_fill_manual(values = c("Chartreuse4", "darkred"))+
scale_color_manual(values = c("darkgrey", "darkgrey"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, fill=Tumors)) +
geom_boxplot(size = 0.8, alpha = 0.7) +
scale_fill_manual(values = c("Chartreuse4", "darkred"))+
scale_color_manual(values = c("grey", "grey"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, fill=Tumors, color=Tumors)) +
geom_boxplot(size = 0.8, alpha = 0.7) +
scale_fill_manual(values = c("Chartreuse4", "darkred"))+
scale_color_manual(values = c("grey", "grey"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, fill=Tumors)) +
geom_boxplot(size = 0.8, alpha = 0.7) +
scale_fill_manual(values = c("Chartreuse4", "darkred"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, fill=Tumors)) +
geom_boxplot(size = 0.6, alpha = 0.7) +
scale_fill_manual(values = c("Chartreuse4", "darkred"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, fill=Tumors)) +
geom_boxplot(size = 0.4, alpha = 0.7) +
scale_fill_manual(values = c("Chartreuse4", "darkred"))+
theme_minimal()
b
b <- ggplot(data = subset(data_1N,data_1N$diff_maxR==0), aes(y = buds_10,x = Tumors, fill=Tumors)) +
geom_boxplot(size = 0.4, alpha = 0.5) +
scale_fill_manual(values = c("Chartreuse4", "darkred"))+
theme_minimal()
b
# Créer le graphique avec ggplot
a <- ggplot(data = data_1N, aes(x = diff_maxR, y = buds_10, color = Tumors)) +
geom_point(size = 3, alpha = 0.7, position = "jitter") +  # Ajuster la taille et la transparence des points
geom_smooth(method = "lm", se = T) + # Ajuster la régression linéaire+
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 5, by = 2))
ggMarginal(a, type = "boxplot",
margins = "y",
size = 5,
groupColour = TRUE,
groupFill = TRUE)
# Créer le graphique avec ggplot
a <- ggplot(data = data_1N, aes(x = diff_maxR, y = buds_10, color = Tumors)) +
geom_point(size = 3, alpha = 0.7, position = "jitter") +  # Ajuster la taille et la transparence des points
geom_smooth(method = "lm", se = T) + # Ajuster la régression linéaire+
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 9, by = 2))
a
length(data_1N$buds_10[data_1N$Tumors==0 & data_1N$diff_maxR==0])
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==0])
shapiro.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0])
shapiro.test(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0])
wilcox.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0])
wilcox.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0])
data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]
data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0]
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==0])
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==1])
wilcox.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1])
data_1N$buds_10[data_1N$Tumors == 1]
wilcox.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1], na.rm=T)
wilcox.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1], na.rm=F)
wilcox.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1])
wilcox.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0], na.rm=F)
wilcox.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0], na.rm=t)
wilcox.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0])
t.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0],
data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0])
data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0
]
na.rm(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0])
wilcox.test(na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]),
data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0])
na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0])
data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]
na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]
°
)
na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0])
wilcox.test(na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]),
na.omit(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0]))
wilcox.test(na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]),
na.omit(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0]))
shapiro.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0])
shapiro.test(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0])
wilcox.test(na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]),
na.omit(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0]))
na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0])
na.omit(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0])
wilcox.test(na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]),
na.omit(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0]))
median(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR== 0], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==0 & data_1N$diff_maxR==0])
median(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR== 0], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==1 & data_1N$diff_maxR==0])
shapiro.test(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0])
shapiro.test(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0])
t.test(na.omit(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0]),
na.omit(data_1N$buds_10[data_1N$Tumors == 1 & data_1N$diff_maxR==0]))
median(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR==0], na.rm = T)
mean(data_1N$buds_10[data_1N$Tumors == 0 & data_1N$diff_maxR== 0], na.rm = T)
length(data_1N$buds_10[data_1N$Tumors==0 & data_1N$diff_maxR==0])
data_1$groupD <- as.factor(paste0(data_1$donor, data_1$donor_status))
summary(data_1$groupD)
data_1N <- subset(data_1, data_1$abnormalities=="Normal" & data_1$tenta_1>3)
best_rt10.4 <- lmer(buds_10 ~ 1 + diff_maxR * Tumors + (1|groupDR),
data=donor_transN)
best_rt10.3 <- lmer(buds_10 ~ 1 + diff_maxR + Tumors + (1|groupDR),
data=donor_transN)
best_rt10.2 <- lmer(buds_10 ~ 1 + diff_maxR + (1|groupDR),
data=donor_transN)
best_rt10.1 <- lmer(buds_10 ~ 1 + Tumors + (1|groupDR),
data=donor_transN)
best_rt10.0 <- lmer(buds_10 ~ 1 + Tumors + (1|groupDR),
data=donor_transN)
AICc(best_rt10.4, best_rt10.3,best_rt10.2, best_rt10.1, best_rt10.0)
tab_model(best_rt10.4, best_rt10.3,best_rt10.2, best_rt10.1, best_rt10.0, show.intercept = F)
tab_model(best_rt10.4, show.intercept = F)
length(data_1N$buds_10[data_1N$Tumors==0)
length(data_1N$buds_10[data_1N$Tumors==0])
length(data_1N$buds_10[data_1N$Tumors==1])
donor_transN$groupDR <- paste0(donor_transN$donor, donor_transN$donor_status, donor_transN$receiver)
best_rt10.4 <- lmer(buds_10 ~ 1 + diff_maxR * Tumors + (1|groupDR),
data=donor_transN)
best_rt10.2 <- lmer(buds_10 ~ 1 + diff_maxR + (1|groupDR),
data=donor_transN)
best_rt10.1 <- lmer(buds_10 ~ 1 + Tumors + (1|groupDR),
data=donor_transN)
best_rt10.0 <- lmer(buds_10 ~ 1 + (1|groupDR),
data=donor_transN)
AICc(best_rt10.4, best_rt10.3,best_rt10.2, best_rt10.1, best_rt10.0)
tab_model(best_rt10.4, best_rt10.3,best_rt10.2, best_rt10.1, best_rt10.0, show.intercept = F)
tab_model(best_rt10.4, show.intercept = F)
simulateResiduals(best_rt10.4, plot=T)
data_1$groupD <- as.factor(paste0(data_1$donor, data_1$donor_status, data_1$recipient))
summary(data_1$groupDR)
data_1N <- subset(data_1, data_1$abnormalities=="Normal")
best_rt10.4 <- lmer(buds_10 ~ 1 + diff_maxR * Tumors + (1|groupDR),
data=donor_transN)
best_rt10.3 <- lmer(buds_10 ~ 1 + diff_maxR + Tumors + (1|groupDR),
data=donor_transN)
best_rt10.2 <- lmer(buds_10 ~ 1 + diff_maxR + (1|groupDR),
data=donor_transN)
best_rt10.1 <- lmer(buds_10 ~ 1 + Tumors + (1|groupDR),
data=donor_transN)
best_rt10.0 <- lmer(buds_10 ~ 1 + Tumors + (1|groupDR),
data=donor_transN)
AICc(best_rt10.4, best_rt10.3,best_rt10.2, best_rt10.1, best_rt10.0)
best_rt10 <- lmer(buds_10 ~ 1 + tenta_10 * Tumors + (1|groupDR),
data=data_1N)
data_1$groupDR <- as.factor(paste0(data_1$donor, data_1$donor_status, data_1$recipient))
summary(data_1$groupDR)
data_1N <- subset(data_1, data_1$abnormalities=="Normal")
best_rt10.4 <- lmer(buds_10 ~ 1 + diff_maxR * Tumors + (1|groupDR),
data=donor_transN)
best_rt10.3 <- lmer(buds_10 ~ 1 + diff_maxR + Tumors + (1|groupDR),
data=donor_transN)
best_rt10.2 <- lmer(buds_10 ~ 1 + diff_maxR + (1|groupDR),
data=donor_transN)
best_rt10 <- lmer(buds_10 ~ 1 + tenta_10 * Tumors + (1|groupDR),
data=data_1N)
best_rt9 <- lmer(buds_9 ~ 1 + tenta_9 * Tumors+ (1|groupDR),
data=data_1N)
best_rt8 <- lmer(buds_8 ~ 1 + tenta_8 * Tumors+ (1|groupDR),
data=data_1N)
best_rt7 <- lmer(buds_7 ~ 1 + tenta_7 * Tumors+ (1|groupDR),
data=data_1N)
best_rt6 <- lmer(buds_6 ~ 1 + tenta_6 * Tumors+ (1|groupDR),
data=data_1N)
best_rt5 <- lmer(buds_5 ~ 1 + tenta_5 * Tumors+ (1|groupDR),
data=data_1N)
best_rt4 <- lmer(buds_4 ~ 1 + tenta_4 * Tumors+ (1|groupDR),
data=data_1N)
best_rt3 <- lmer(buds_3 ~ 1 + tenta_3 * Tumors+ (1|groupDR),
data=data_1N)
best_rt2 <- lmer(buds_2 ~ 1 + tenta_2 * Tumors+ (1|groupDR),
data=data_1N)
best_rt1 <- lmer(buds_1 ~ 1 + tenta_1 * Tumors+ (1|groupDR),
data=data_1N)
tab_model(best_rt10,best_rt9,best_rt8,best_rt7,best_rt6,best_rt5,best_rt4,best_rt3,best_rt2,best_rt1,
show.intercept = F)
tab_model(best_rt10,best_rt9,best_rt8,best_rt7,best_rt6,best_rt5,best_rt4,best_rt3,best_rt2,best_rt1,
show.intercept = F)
simulateResiduals(best_rt10, plot=T)
best_rt10.1 <- lmer(buds_10 ~ 1 + tenta_10 * Tumors + (1|groupDR),
data=data_1N)
best_rt10.3 <- lmer(buds_10 ~ 1 + tenta_10  + (1|groupDR),
data=data_1N)
best_rt10.4 <- lmer(buds_10 ~ 1 + Tumors  + (1|groupDR),
data=data_1N)
best_rt10.5 <- lmer(buds_10 ~ 1 + 0  + (1|groupDR),
data=data_1N)
AICc(best_rt10.1 , best_rt10.2, best_rt10.3, best_rt10.4, best_rt10.5)
tab_model(best_rt10.1, best_rt10.4,
show.intercept = F)
tab_model(best_rt10.1, best_rt10.4,
show.intercept = F)
ggplot(data = data_1N, aes(x = diff_maxR, y = buds_10, color = Tumors)) +
geom_point(size = 3, alpha = 0.7, position = "jitter") +  # Ajuster la taille et la transparence des points
geom_smooth(method = "lm", se = T) + # Ajuster la régression linéaire+
theme_minimal() +  # Choisir un thème minimal
labs(title = "",
x = "Number of supernumerary tentacles",
y = "Number of buds produced (ten weeks)") +  # Ajouter des étiquettes d'axes
scale_color_manual(values = c("Chartreuse4", "darkred")) +  # Changer les couleurs manuellement
theme(legend.position = "top")+
scale_x_continuous(breaks = seq(-1, 9, by = 2))
library(formatR)
install.packages("formatR")
library(formatR)
donor_transN$groupDR <- paste0(donor_transN$donor, donor_transN$donor_status, donor_transN$receiver)
best_rt10.4 <- lmer(buds_10 ~ 1 + diff_maxR * Tumors + (1|groupDR),
data=donor_transN)
donor_spontN$groupDR <- as.factor(paste0(data_1$donor, data_1$donor_status))
summary(donor_spontN$groupDR)
donor_spontN$groupDR <- as.factor(paste0(donor_spontN$donor, donor_spontN$donor_status, donor_spontN$receiver))
summary(donor_spontN$groupDR)
